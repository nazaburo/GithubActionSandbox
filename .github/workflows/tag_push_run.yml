name: tag push run
on:
  push:
    tags:
      - '**'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: read

jobs:
  createZip:
    if: contains(github.ref, 'qas')
    runs-on: ubuntu-latest
    outputs:
      zip_path: ${{ steps.create_zip.outputs.zip_path }}
    steps:
      - name: Zip the release
        id: create_zip
        run: |
          echo "create dummy zip file"
          echo "dummy" > dummy.txt
          zip dummy.zip dummy.txt
          echo "::set-output name=zip_path::$(pwd)/dummy.zip"

  createGitHubRelease:
    needs: createZip
    runs-on: ubuntu-latest
    timeout-minutes: 60
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release page
        run: |
          echo "TAG_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: release-drafter/release-drafter@v6
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}

  uploadAssets:
    needs: [createZip, createGitHubRelease]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Zip the release
        run: |
          echo "create dummy zip file"
          echo "dummy" > dummy.txt
          zip dummy.zip dummy.txt
      - name: Upload the release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.createGitHubRelease.outputs.upload_url }}
          asset_path: ${{ needs.createZip.outputs.zip_path }}
          asset_name: dummy.zip
          asset_content_type: application/zip

